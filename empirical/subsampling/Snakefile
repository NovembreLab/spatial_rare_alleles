#!python3

import pandas as pd
import numpy as np


### --------- Configuration Information ---------- ###
configfile: "config.yaml"
chroms = [f"chr{i}" for i in range(1, 23)]


### --------- Setting up the targets for the workflow -------- ###
seed = 42
seedlist = range(1,21)
TARGETS = []

for seed in seedlist:
    TARGETS.append(
        f"../results/subsample_sfs/ukb_center/uniform.newcastle.merged.ukb_exomes.all.seed{seed}.nsamp{config['UKBB_EXOMES']['scenarios']['newcastle']['n']}.sfs.tsv.gz",
    )

# Just get the unique targets for the pipeline if possible.
TARGETS = np.unique(TARGETS).tolist()

rule all:
    input:
        TARGETS,

# ----------- UKBB Whole Exomes - By Center (categorical subsampling) -------------- #

rule get_frq_files:
    input:
        "ids_assessment_center.csv",
        "ids_assessment_center_WB.csv",
        "ids_country_UKmainland.csv",
        "ids_country_UKmainland_WB.csv",
    output:
        frq_file_1="data/frq/c{chrom}_assessment_center.frq.strat",
        frq_file_2="data/frq/c{chrom}_country_UKmainland.frq.strat",
        frq_file_3="data/frq/c{chrom}_assessment_center_WBonly.frq.strat",
        frq_file_4="data/frq/c{chrom}_country_UKmainland_WBonly.frq.strat",
    shell:
        """
        dx upload ids_assessment_center.csv
        dx upload ids_assessment_center_WB.csv
        dx upload ids_country_UKmainland.csv
        dx upload ids_country_UKmainland_WB.csv


        eval "dx run app-swiss-army-knife -y --wait \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bed \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bim \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.fam \
                -iin=ids_assessment_center.csv \
                -icmd='plink --bfile ukb23158_c{wildcards.chrom}_b0_v1 --keep ids_assessment_center.csv --freq --within ids_assessment_center.csv --out chr{wildcards.chrom}_wes_assessment_center

        eval "dx run app-swiss-army-knife -y --wait \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bed \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bim \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.fam \
                -iin=ids_assessment_center.csv \
                -icmd='plink --bfile ukb23158_c{wildcards.chrom}_b0_v1 --keep ids_assessment_center_WB.csv --freq --within ids_assessment_center_WB.csv --out chr{wildcards.chrom}_wes_assessment_center_WBonly

        eval "dx run app-swiss-army-knife -y --wait \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bed \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bim \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.fam \
                -iin=ids_assessment_center.csv \
                -icmd='plink --bfile ukb23158_c{wildcards.chrom}_b0_v1 --keep ids_country_UKmainland.csv --freq --within ids_country_UKmainland.csv --out chr{wildcards.chrom}_wes_country_UKmainland

        eval "dx run app-swiss-army-knife -y --wait \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bed \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.bim \
                -iin=Rare\ Variants\ in\ Space:/Bulk/Exome\ sequences/Population\ level\ exome\ OQFE\ variants,\ PLINK\ format\ -\ final\ release/ukb23158_c{wildcards.chrom}_b0_v1.fam \
                -iin=ids_assessment_center.csv \
                -icmd='plink --bfile ukb23158_c{wildcards.chrom}_b0_v1 --keep ids_country_UKmainland_WB.csv --freq --within ids_country_UKmainland_WB.csv --out chr{wildcards.chrom}_wes_country_UKmainland_WBonly

        dx download chr{wildcards.chrom}_wes_assessment_center.frq.strat
        dx download chr{wildcards.chrom}_wes_assessment_center_WBonly.frq.strat
        dx download chr{wildcards.chrom}_wes_country_UKmainland.frq.strat
        dx download chr{wildcards.chrom}_wes_country_UKmainland_WBonly.frq.strat

        """

rule format_tables_UKB_exomes:
    input:
        ukb_jsfs="data/frq/chr{chrom}_wes_{group}.frq.strat",
        script="scripts/format_data_UKB.R",
        meta="data/ukb23158_500k_OQFE.annotations.txt"
    output:
        formatted_sfs="results/sfs_files/{scenario}/chr{chrom}.wes.{group}.jsfs.formatted.tsv.gz",
    run:
        shell("Rscript {input.script} {input.ukb_jsfs} {output.formatted_sfs} {input.meta}")

rule subsamp_sfs_UKB_exomes:
    input:
        input_jsfs="../results/sfs_files/{scenario}/chr{chrom}.wes.{group}.jsfs.formatted.tsv.gz",
    output:
        subsamp_sfs_tsv="../results/subsample_sfs/{scenario}/chr{chrom}.wes.{group}.seed{seed}.nsamp{nsamp}.sfs.tsv.gz",
    params:
        # STOPPED EDITING HERE 11/24
        poplist=["barts","birmingham","bristol","bury","cardiff","croydon","edinburgh","glasgow","hounslow","leeds","liverpool","manchester","middlesborough","newcastle","nottingham","oxford","reading","sheffield","stockport","stoke","swansea","wrexham"],
        n=lambda wildcards: int(
            config["UKBB_EXOMES"]["scenarios"][wildcards.scenario]["n"]
        ),
        props = lambda wildcards: np.array(
            [
                float(x)
                for x in config["UKBB_EXOMES"]["scenarios"][wildcards.scenario]["props"].split(",")
            ]
        ),

    script:
        "scripts/subsample_afs.py"

rule joint_sfs_filt_UKB:
    input:
        subsamp1_sfs_tsv="../results/subsample_sfs/ukb_center/{scenario1}/ukb_exomes.chr{chrom}.{group}.seed{seed}.nsamp{nsamp}.sfs.tsv.gz",
        subsamp2_sfs_tsv="../results/subsample_sfs/ukb_center/{scenario2}/ukb_exomes.chr{chrom}.{group}.seed{seed}.nsamp{nsamp}.sfs.tsv.gz",
    output:
        merged_tsv=temp(
            "../results/subsample_sfs/ukb_center/{scenario1}.{scenario2}.ukb_exomes.chr{chrom}.{group}.seed{seed}.nsamp{nsamp}.sfs.tsv.gz"
        ),
    run:
        sfs1_df = pd.read_csv(input.subsamp1_sfs_tsv, sep="\t")
        sfs2_df = pd.read_csv(input.subsamp2_sfs_tsv, sep="\t")
        for a in ["AC", "AF", "N"]:
            assert a in sfs1_df.columns
            assert a in sfs2_df.columns
        sfs1_df = sfs1_df.rename(
            columns={
                "AC": f"AC_{wildcards['scenario1']}",
                "AF": f"AF_{wildcards['scenario1']}",
                "N": f"N_{wildcards['scenario1']}",
            }
        )
        sfs2_df = sfs2_df.rename(
            columns={
                "AC": f"AC_{wildcards['scenario2']}",
                "AF": f"AF_{wildcards['scenario2']}",
                "N": f"N_{wildcards['scenario2']}",
            }
        )
        merged_sfs_df = sfs1_df.merge(sfs2_df)
        merged_sfs_df = merged_sfs_df[
            (merged_sfs_df[f"AC_{wildcards['scenario1']}"] > 0)
            | (merged_sfs_df[f"AC_{wildcards['scenario2']}"] > 0)
        ]
        merged_sfs_df.to_csv(output.merged_tsv, sep="\t", index=None)

rule concat_join_sfs_UKB:
    input:
        expand(
            "../results/subsample_sfs/ukb_center/{{scenario1}}.{{scenario2}}.ukb_exomes.{chrom}.{{group}}.seed{{seed}}.nsamp{{nsamp}}.sfs.tsv.gz",
            chrom=chroms,
        ),
    output:
        "../results/subsample_sfs/ukb_center/{scenario1}.{scenario2}.merged.ukb_exomes.{group}.seed{seed}.nsamp{nsamp}.sfs.tsv.gz",
    shell:
        "zcat {input} | awk 'NR > 1 && /^Annot/ {{ next }} 1' | gzip > {output}"


