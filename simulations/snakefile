### Welcome to the spatial rare alleles simulation pipeline!
### This pipeline runs spatial simulations in SLiM
### and then samples individuals with a spatial kernel
### to obtain an SFS


replicates = [50] # number of simulation replicates
s_coeffs = [-1e-5, -1e-4, -1e-3, -1e-2, -1e-1]
mus = [1e-10] # mutation rates
Ks = [5] # densities
Ws = [75]
sigmas = [0.2]

localrules: all

rule all:
    input:
        expand("{filetype}/{rep}_W{W}_s{s}_mu{mu}_K{K}_sigma{sigma}_recapitated_N{past_Ne}_t{time_bottle}_n{n}_niter{niter}.{filetype}",
               rep=range(50),
               s=s_coeffs,
               mu=mus,
               K=Ks,
               W=Ws,
               sigma=sigmas, n= 10000, niter = 100,past_Ne=[2000],time_bottle=[2000],filetype=["sfs","variants"])

# Define the first step: run_simulations
rule run_simulations:
    output:
        "sims/{rep}_W{W}_s{s}_mu{mu}_K{K}_sigma{sigma,[0-9]+(\.[0-9]+)?}.trees"
    log: "logs/sims/{rep}_W{W}_s{s}_mu{mu}_K{K}_sigma{sigma}.trees.log"
    params: s_val= lambda wildcards: str(wildcards.s * 2) # multiplied by 2 because in SLiM the coefficient is defined for homozygotes
    resources: partition="jnovembre",mem_mb=48000,time="12:00:00"
    shell:
        """
        module load SLiM/3.0
        slim -define K={wildcards.K} \
            -define mu={wildcards.mu} \
            -define s={params.s_val} \
            -define W={wildcards.W} \
            -define "outpath='{output}'" \
            -define sigma={wildcards.sigma} \
            scripts/rare_variant_simulation.slim
         """

# Second step: sfs sampling
rule sample_sfs:
    input:
        "sims/{file}.trees"
    log: "logs/sfs/{file}_n{n}_niter{niter}.sfs.log"
    output:
        "sfs/{file}_n{n}_niter{niter}.sfs"
    resources:
        partition="jnovembre",mem_mb=50000,time="03:00:00"
    #conda:
	#"spatialrarealleles"
    shell:
        """
        python scripts/sample_sfs.py {input} \
            --num_samples {wildcards.n} \
            --output {output} \
            --niter {wildcards.niter} \
            --bins 50
        """

# Variant sampling
rule sample_variants:
    input:
        "sims/{file}.trees"
    log: "logs/variants/{file}_n{n}_niter{niter}.variants.log"
    output:
        "variants/{file}_n{n}_niter{niter}.variants"
    resources:
        partition="jnovembre",mem_mb=50000,time="01:30:00"
    #conda:
        #"spatialrarealleles"
    shell:
        """
        python scripts/sample_variants.py {input} \
            --num_samples {wildcards.n} \
            --output {output} \
            --niter {wildcards.niter}
        """

# cut and recapitate trees
rule cut_recapitate:
    input:
        "sims/{file}.trees"
    log: "logs/sims/{file}_recapitated_N{past_Ne}_t{time_bottle}.trees.log"
    output:
        "sims/{file}_recapitated_N{past_Ne}_t{time_bottle}.trees"
    #conda:
        #"spatialrarealleles"
    resources:
        partition="jnovembre"
    shell:
        """
        python scripts/cut_recapitate.py {input} \
            --past_Ne {wildcards.past_Ne} \
            --time_bottle {wildcards.time_bottle} \
            --output {output}
        """
